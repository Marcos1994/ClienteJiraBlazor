@inject ServicoTarefa servicoTarefa

@if (tarefa == null)
{

}
else
{

	<div class="card" style="width: 105%;">
		<div class="card-header">
    		<h6 class="card-title">@tarefa.Nome</h6>
  		</div>
		<div class="card-body">
			<h6 >Status: @tarefa.Status</h6>
			@foreach (var c in tarefa.Comentarios)
			{
				string comentario = c.Conteudo;
				string autor = c.Autor.Nome;
				<a class="btn" @onclick="() => mostrarComentario(comentario, autor)">
					<i class='fas fa-comment-alt' style='font-size:26px;color:blue'></i>
				</a>
				<Popup @ref="popupRef" />
			}
		</div>

		<div class="card-footer">

			
				@for (int i = 0; i < 5; i++)
				{
					@foreach (var a in tarefa.Apontamentos)
					{
						if (a.Data.Value.Date == sprint.Inicio.Value.Date.AddDays(i))
						{
							<div class="circle-singleline"> @(a.Tempo / 3600)h na @diaDaSemana(i) </div>
						}
					}
				}
		</div>
	</div>

}

@code {
	[Parameter]
	public string chaveTarefa { get; set; }

	[Parameter]
	public Sprint sprint { get; set; }

	private Tarefa tarefa;

	protected override async Task OnInitializedAsync()
	{
		tarefa = await servicoTarefa.BuscarTarefa(chaveTarefa);
	}
	private Popup popupRef;

	private void mostrarComentario(string Comentario, string autor)
	{
		// Shows the popup at the center of the screen
		popupRef.Show(Comentario, autor);
	}
	private string diaDaSemana(int i){
		switch(i){
			case 0: return "segunda-feira";
			case 1: return "terça-feira";
			case 2: return "quarta-feira";
			case 3: return "quinta-feira";
			case 4: return "sexta-feira";
			default: return "dia inválido";
		}
	}
}
