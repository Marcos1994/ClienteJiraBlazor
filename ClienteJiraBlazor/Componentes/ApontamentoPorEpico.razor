@inject ServicoEpico servicoEpico

@if (epico == null)
{
}
else
{

	<br><br>
	<div id="accordion">
		<button class="btn btn-primary" type="button">
			<h6>@epico.Nome</h6>
		</button>

		@foreach (var c in epico.Comentarios)
		{
			string comentario = c.Conteudo;
			string autor = c.Autor.Nome;
			string data = c.DataCriacao.ToString();
			autor = autor + ", " + data;
			<a class="btn" @onclick="() => mostrarComentario(comentario, autor)">
				<i class='fas fa-comment-alt' style='font-size:26px;color:blue'></i>
			</a>
			<Popup @ref="popupRef" />
		}

		<div class="card card-body">
			<div class="row">
				@foreach (var t in tarefas)
				{
					<div class="col-lg-4 d-flex align-items-stretch">
						<TarefaApontamentoPorEpico chaveTarefa="@t.Chave" sprint="@sprint"></TarefaApontamentoPorEpico>
					</div>
				}
			</div>
		</div>
	</div>

}

@code {
	[Parameter]
	public string chaveEpico { get; set; }

	[Parameter]
	public Sprint sprint { get; set; }

	[Parameter]
	public List<Tarefa> tarefas { get; set; }

	private Epico epico;

	protected override async Task OnInitializedAsync()
	{
		epico = await servicoEpico.BuscarEpico(chaveEpico);
	}
	private Popup popupRef;

	private void mostrarComentario(string Comentario, string autor)
	{
		// Shows the popup at the center of the screen
		popupRef.Show(Comentario, autor);
	}
}
