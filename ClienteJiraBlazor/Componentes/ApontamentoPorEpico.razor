@inject ServicoEpico servicoEpico

@if (epico == null)
{
}
else
{
 	<br><br>
	<div id="accordion">
		<div class="card">
			<div class="card-header" id="heading">
				<h5 class="mb-0">
					<button class="btn btn-link" data-toggle="collapse" data-target="#collapseBody" aria-expanded="false"
					aria-controls="collapseBody">
						<h6>@epico.Nome</h6>
					</button>
				</h5>

				@foreach (var c in epico.Comentarios)
				{
				string comentario = c.Conteudo;
				string autor = c.Autor.Nome;
				<a class="btn" @onclick="() => mostrarComentario(comentario, autor)">
					<i class='fas fa-comment-alt' style='font-size:26px;color:blue'></i>
				</a>
				<Popup @ref="popupRef" />
				}

			</div>

			<div id="collapseBody" class="collapse show" aria-labelledby="heading" data-parent="#accordion">
				<div class="card-body">
					<div class="row">
						@foreach (var t in tarefas)
						{
							<div class="col-lg-4 d-flex align-items-stretch">
								<TarefaApontamentoPorEpico chaveTarefa="@t.Chave" sprint="@sprint"></TarefaApontamentoPorEpico>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	</div>

}

@code {
	[Parameter]
	public string chaveEpico { get; set; }

	[Parameter]
	public Sprint sprint { get; set; }

	[Parameter]
	public List<Tarefa> tarefas { get; set; }

	private Epico epico;

	protected override async Task OnInitializedAsync()
	{
		epico = await servicoEpico.BuscarEpico(chaveEpico);
	}
	private Popup popupRef;

	private void mostrarComentario(string Comentario, string autor)
	{
		// Shows the popup at the center of the screen
		popupRef.Show(Comentario, autor);
	}
}
